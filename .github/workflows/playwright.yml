name: Playwright Tests
on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    timeout-minutes: 60
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        browser: [chromium, firefox, webkit]
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-node@v4
      with:
        node-version: lts/*
    - name: Install dependencies
      run: npm ci
    - name: Install Playwright
      run: npm install playwright@1.52.0
    - name: Install Playwright Browsers
      run: npx playwright install --with-deps
    - name: Run Playwright tests
      env:
        BROWSER: ${{ matrix.browser }}
      run: npx playwright test --project=${{ matrix.browser }}
    - uses: actions/upload-artifact@v4
      if: always()
      with:
        name: blob-report-${{ matrix.os }}-${{ matrix.browser }}
        path: blob-report/
        retention-days: 30

  consolidate-report:
    needs: test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-node@v4
      with:
        node-version: lts/*
    - name: Install dependencies
      run: npm ci
    - name: Install Playwright
      run: npm install playwright@1.52.0
    - name: Download all reports
      uses: actions/download-artifact@v4
      with:
        path: all-blob-reports
        pattern: blob-report-*
        merge-multiple: false
      
    - name: List downloaded reports
      run: |
        echo "Downloaded blob reports:"
        ls -la all-blob-reports
    
    # Create clean working directory
    - name: Create working directory
      run: mkdir -p ./merged-reports

    # Extract any valid report files (JSONL files are the key for blob reports)
    - name: Safely extract report files
      run: |
        # Process each blob report directory
        for dir in all-blob-reports/*; do
          if [ -d "$dir" ]; then
            echo "Processing $dir"
            
            # Try to copy any report.jsonl files directly (non-zipped format)
            if [ -f "$dir/report.jsonl" ]; then
              echo "Found report.jsonl in $dir, copying directly"
              cp "$dir/report.jsonl" "./merged-reports/$(basename "$dir").jsonl"
            fi
            
            # Try to extract from zip files carefully
            for zip in "$dir"/*.zip; do
              if [ -f "$zip" ]; then
                echo "Attempting to extract $zip"
                # Create a temporary directory for this zip
                tmp_dir=$(mktemp -d)
                # Try to unzip, ignore errors
                unzip -o "$zip" -d "$tmp_dir" || echo "Warning: extraction errors for $zip"
                
                # Look for any jsonl files and copy them
                if [ -f "$tmp_dir/report.jsonl" ]; then
                  echo "Found report.jsonl in $zip"
                  cp "$tmp_dir/report.jsonl" "./merged-reports/$(basename "$zip" .zip).jsonl"
                fi
                
                # Copy any trace files if they exist
                if [ -d "$tmp_dir/resources" ]; then
                  mkdir -p "./merged-reports/resources"
                  cp -r "$tmp_dir/resources/"* "./merged-reports/resources/" 2>/dev/null || true
                fi
                
                # Clean up
                rm -rf "$tmp_dir"
              fi
            done
          fi
        done

    - name: Check for report files
      run: |
        echo "Files in merged-reports directory:"
        find ./merged-reports -type f | sort
        
        # Count JSONL files specifically
        jsonl_count=$(find ./merged-reports -name "*.jsonl" | wc -l)
        echo "Found $jsonl_count JSONL report files"
        
        if [ "$jsonl_count" -eq 0 ]; then
          echo "No valid report files found. Check blob report format."
          exit 1
        fi

    - name: Merge into HTML Report
      run: |
        # Run merge-reports with the prepared directory
        npx playwright merge-reports --reporter html ./merged-reports
    
    - name: Upload HTML report
      uses: actions/upload-artifact@v4
      with:
        name: html-report
        path: playwright-report
        retention-days: 14
